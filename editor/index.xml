<rss version="2.0" xmlns:atom="http://www.w3.org/2005/Atom"><channel><title>Tom's Notebook â€“ Editor</title><link>/editor/</link><description>Recent content in Editor on Tom's Notebook</description><generator>Hugo -- gohugo.io</generator><language>en-us</language><atom:link href="/editor/index.xml" rel="self" type="application/rss+xml"/><item><title>Editor: Diff</title><link>/editor/diff/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/editor/diff/</guid><description>
&lt;div id="editorcontainer0" class="border w-100" style="height: 800px;" >&lt;/div>
&lt;link rel="stylesheet" data-name="vs/editor/editor.main" href="/lib/monaco-editor/min/vs/editor/editor.main.css" />
&lt;script>
var require = { paths: { vs: '/lib/monaco-editor/min/vs' } };
var editor;
&lt;/script>
&lt;script src="/lib/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script src="/lib/monaco-editor/min/vs/editor/editor.main.nls.js">&lt;/script>
&lt;script src="/lib/monaco-editor/min/vs/editor/editor.main.js">&lt;/script>
&lt;script>
$(function(){
require(['vs/editor/editor.main'], function () {
editor = monaco.editor.createDiffEditor(document.getElementById('editorcontainer0'), {
originalEditable: true,
readOnly:false
});
editor.setModel({
original: monaco.editor.createModel('a', 'text/plain'),
modified: monaco.editor.createModel('b', 'text/plain')
});
});
});
&lt;/script></description></item><item><title>Editor: Go</title><link>/editor/go/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/editor/go/</guid><description>
&lt;div class="row p-2">
&lt;!-- &lt;div class="col-auto" >
&lt;select class="form-select" aria-label="Default select example">
&lt;option value="1">One&lt;/option>
&lt;option value="2">Two&lt;/option>
&lt;option value="3">Three&lt;/option>
&lt;/select>
&lt;/div> -->
&lt;div class="col-auto" >
&lt;button class="btn btn-outline-primary btn-sm" id="runBtn" >Run&lt;/button>
&lt;/div>
&lt;/div>
&lt;div id="editorcontainer0" class="border w-100" style="height: 500px;" >&lt;/div>
&lt;link rel="stylesheet" data-name="vs/editor/editor.main" href="/lib/monaco-editor/min/vs/editor/editor.main.css" />
&lt;script>
var require = { paths: { vs: '/lib/monaco-editor/min/vs' } };
var editor;
&lt;/script>
&lt;script src="/lib/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script src="/lib/monaco-editor/min/vs/editor/editor.main.nls.js">&lt;/script>
&lt;script src="/lib/monaco-editor/min/vs/editor/editor.main.js">&lt;/script>
&lt;script>
$(function(){
var modeId = 'go';
editor = monaco.editor.create(document.getElementById('editorcontainer0'), {
language: modeId,
automaticLayout: true
});
$.ajax({
type: 'GET',
url: "/resource/editor/example/"+modeId+".txt",
dataType: 'text',
error: function () {
console.log("load "+modeId+" sample fail.")
}
}).done(function (data) {
var oldModel = editor.getModel();
var newModel = monaco.editor.createModel(data, modeId);
editor.setModel(newModel);
if (oldModel) {
oldModel.dispose();
}
});
})
&lt;/script>
&lt;div id="output" class="-bg-primary display-4 w-100 p-2" style="height: 200px;">&lt;/div>
&lt;script>
$(function(){
$('#runBtn').click(function(){
$.ajax({
type: 'POST',
url: 'https://go.dev/_/compile',
data: {
version: 2,
body: editor.getModel().getValue()
}
})
});
})
&lt;/script></description></item><item><title>Editor: JavaScript</title><link>/editor/javascript/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/editor/javascript/</guid><description>
&lt;div id="editorcontainer0" class="border w-100" style="height: 800px;" >&lt;/div>
&lt;link rel="stylesheet" data-name="vs/editor/editor.main" href="/lib/monaco-editor/min/vs/editor/editor.main.css" />
&lt;script>
var require = { paths: { vs: '/lib/monaco-editor/min/vs' } };
var editor;
&lt;/script>
&lt;script src="/lib/monaco-editor/min/vs/loader.js">&lt;/script>
&lt;script src="/lib/monaco-editor/min/vs/editor/editor.main.nls.js">&lt;/script>
&lt;script src="/lib/monaco-editor/min/vs/editor/editor.main.js">&lt;/script>
&lt;script>
$(function(){
var modeId = 'javascript';
editor = monaco.editor.create(document.getElementById('editorcontainer0'), {
language: modeId,
automaticLayout: true
});
$.ajax({
type: 'GET',
url: "/resource/editor/example/"+modeId+".txt",
dataType: 'text',
error: function () {
console.log("load "+modeId+" sample fail.")
}
}).done(function (data) {
var oldModel = editor.getModel();
var newModel = monaco.editor.createModel(data, modeId);
editor.setModel(newModel);
if (oldModel) {
oldModel.dispose();
}
});
})
&lt;/script>
&lt;p>To learn more about &lt;a href="https://www.javascript.com/">JavaScript&lt;/a>&lt;/p></description></item><item><title>Editor: Markdown Mermaid</title><link>/editor/markdown-mermaid/</link><pubDate>Mon, 01 Jan 0001 00:00:00 +0000</pubDate><guid>/editor/markdown-mermaid/</guid><description>
&lt;div class="container-fluid">
&lt;div class="row">
&lt;div class="col p-2">
&lt;div class="btn-group" role="group">
&lt;button class="btn btn-outline-primary btn-sm" id="preview" >Preview&lt;/button>
&lt;a class="btn btn-outline-primary btn-sm" id="downloadPNG" href="javascript:;" download="a.png" >Download PNG&lt;/a>
&lt;a class="btn btn-outline-primary btn-sm" id="downloadSVG" href="javascript:;" download="a.svg" >Download SVG&lt;/a>
&lt;/div>
&lt;/div>
&lt;/div>
&lt;div class="row">
&lt;div class="col">
&lt;textarea id="input" class="border w-100" style="height: 500px;" placeholder="please put the code here" >&lt;/textarea>
To learn more about &lt;a href="https://mermaid.js.org/" >Mermaid&lt;/a>
&lt;/div>
&lt;div id="output" class="col">&lt;/div>
&lt;/div>
&lt;/div>
&lt;script src="https://cdn.jsdelivr.net/npm/mermaid@10.2.0/dist/mermaid.min.js">&lt;/script>
&lt;script >
$(function(){
mermaid.initialize({startOnLoad:false});
var input = $('#input');
var output = $('#output');
var linkToView = $('#preview');
var downloadSVG = $('#downloadSVG');
var downloadPNG = $('#downloadPNG');
var svg = null
var canvas = null
var timeout = null
var svgDataUrl = ''
// define
var img = new Image();
img.crossOrigin="anonymous";
img.onload=function(){
console.log("img.naturalWidth="+img.naturalWidth)
console.log("img.naturalHeight="+img.naturalHeight)
console.log("img.width="+img.width)
console.log("img.height="+img.height)
}
function draw() {
if (!canvas) {
canvas = document.createElement('canvas');
}
var imgH=img.height;
var imgW=img.width;
canvas.width = imgW;
canvas.height = imgH;
var ctx = canvas.getContext("2d");
ctx.drawImage(img, 0, 0);
return canvas;
}
function renderMermaid() {
const {svg, bindFunctions} = await
mermaid.render('theGraph', input.val(), function(svgCode) {
output.html(svgCode);
svg = output.find('svg')[0];
var svgData = new XMLSerializer().serializeToString(svg);
var svgDataBase64 = btoa(unescape(encodeURIComponent(svgData)))
svgDataUrl = `data:image/svg+xml;charset=utf-8;base64,${svgDataBase64}`
img.src = svgDataUrl
// console.log("svg.getBoundingClientRect.width="+svg.getBoundingClientRect().width)
// console.log("svg.getBoundingClientRect.height="+svg.getBoundingClientRect().height)
// console.log("svg.getBBox.width="+svg.getBBox().width)
// console.log("svg.getBBox.height="+svg.getBBox().height)
img.width = svg.getBBox().width
img.height = svg.getBBox().height
});
}
// bind
input.keydown(function(){
clearTimeout(timeout)
})
input.keyup(function(){
timeout = setTimeout(renderMermaid, 500)
})
linkToView.click(function(){
var win = window.open();
win.document.write('&lt;img src="' + img.src + '" />');
})
downloadSVG.click(function(){
downloadPNG.attr("href", svgDataUrl)
});
downloadPNG.click(function(){
downloadPNG.attr("href", draw().toDataURL('image/png'))
downloadPNG.attr("download", self.crypto.randomUUID()+'.png')
});
// init
input.val('graph TB\na-->b');
renderMermaid();
})
&lt;/script></description></item></channel></rss>